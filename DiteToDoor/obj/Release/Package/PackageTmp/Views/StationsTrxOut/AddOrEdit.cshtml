@using DataMapping.Entites
@model DataMapping.Entites.StationsTrx

@{
    ViewBag.Title = DataMapping.Resources.Resource.Vendor;
    ApplicationDbContext db = new ApplicationDbContext();


}

<style>
   /* #DriverId {
        border: 2px solid #ebebeb;
    }*/

    .col-form-label {
        font-size: 14px !important;
        font-weight: 600;
        color: #34395e !important;
        margin-bottom: 8px;
    }

    #FuelType, #Balance, #MinLimit, #MaxLimit, #CarType, #DriverID {
        border: 2px solid #cbc8c8;
    }
</style>
@using (Html.BeginForm("AddOrEdit", "StationsTrxOut", FormMethod.Post, new { @class = "form-horizontal", @id = "ModalForm" }))

{
    
    if (Model != null)
    {
        if (Model.AssignmentDate != null)
        {
            <input id="AssignmentDatee" hidden value="@Model.AssignmentDate.Value.Date">

        }

        if (Model.InvoiceDate != null)
        {
            <input id="InvoiceDatee" hidden value="@Model.InvoiceDate.Value.Date">

        }

        if (Model.Date != null)
        {
            <input id="Datee" hidden value="@Model.Date.Value.Date">

        }




    }
    else
    {
        <input id="AssignmentDatee" hidden value="1">
        <input id="InvoiceDatee" hidden value="1">
        <input id="Datee" hidden value="1">



    }

    <input type="number" id="change" hidden>
    <div class="row heder_title">
        <div class="col-6">
            <h3 class="blockquote">سند صرف محروقات</h3>
        </div>
        <div class="col-6 text-left">

            <button id="Save" type="submit" class="btn btn-icon icon-left btn-info">
                @DataMapping.Resources.Resource.save <i class="fa fa-save" aria-hidden="true"></i>
            </button>
            <a href="~/StationsTrxOut/Index" id="back" class="btn btn-icon icon-left btn-outline-warning">
                رجوع <i class="fa fa-chevron-left" aria-hidden="true"></i>
            </a>
        </div>
    </div>


    <div class="card-layout">
        <p style="color:red; font-size:10px;">@Session["msgErrV"]</p>
        <div class="row">

            <label class="col-sm-2 col-form-label">
                سنة
            </label>
            <div class="col-sm-4">


                @if (Model != null)
                {
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", @id = "Year", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", @id = "Year", Value = ViewBag.Year, @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                }
            </div>
            <label class="col-sm-2 col-form-label">
                مسلسل
            </label>
            <div class="col-sm-4">
                @if (Model != null)
                {
                    @Html.EditorFor(model => model.Serial, new { htmlAttributes = new { Value = ViewBag.autoCode, @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Serial, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.EditorFor(model => model.Serial, new { htmlAttributes = new { Value = ViewBag.autoCode, @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Serial, "", new { @class = "text-danger" })
                }
            </div>
            <label class="col-sm-2 col-form-label">تاريخ الإستلام</label>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "DateChange form-control", Value = ViewBag.AutoDate, type = "date", @data_date = ViewBag.AutoDate, @data_date_format = "YYYY/MM/DD", @id = "Date" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
            <label class="col-sm-2 col-form-label">
                نوع المحطة
            </label>
            <div class="col-sm-4">
                @Html.DropDownList("Staions", null, "اختر نوع المحطة", new { @id = "Staions", @class = "ColorId form-control select2" })
                @*@Html.ValidationMessageFor(model => model.StationId, "", new { @class = "text-danger" })*@
            </div>

            <label class="col-sm-2 col-form-label">
                المحطة
            </label>
            <div class="col-sm-4">
                @Html.DropDownList("StationId", null, "... أختر  ...", new { @id = "StationId", @class = "ColorId form-control select2" })
                @Html.ValidationMessageFor(model => model.StationId, "", new { @class = "text-danger" })
            </div>
            <label class="col-sm-2 col-form-label" id="">
                نوع الوقود
            </label>
            <div class="col-sm-4">
                <input type="text" id="FuelType" class="form-control">
            </div>
            <label class="col-sm-2 col-form-label" id="type">
                نوع البنزين
            </label>
            <div class="col-sm-4" id="typee">
                @Html.DropDownList("GasolineTypeId", null, "... أختر  ...", new { @id = "GasolineTypeId", @class = "ColorId form-control select2" })
                @Html.ValidationMessageFor(model => model.GasolineTypeId, "", new { @class = "text-danger" })
            </div>
            <label class="col-sm-2 col-form-label" id="">
                الرصيد
            </label>
            <div class="col-sm-4">
                <input type="text" id="Balance" class="form-control" readonly>
            </div>
            <label class="col-sm-2 col-form-label" id="">
                الحد الأدنى
            </label>
            <div class="col-sm-4">
                <input type="text" id="MinLimit" class="form-control" readonly>
            </div>
            <label class="col-sm-2 col-form-label" id="">
                الحد الأقصى
            </label>
            <div class="col-sm-4">
                <input type="text" id="MaxLimit" class="form-control" readonly>
            </div>
            <label class="col-sm-2 col-form-label">الكمية المطلوبة</label>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.RequestedQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestedQuantity, "", new { @class = "text-danger" })
            </div>




            <label class="col-sm-2 col-form-label">إجمالى القيمة</label>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
            </div>
            <label class="col-sm-2 col-form-label">الكميلة الفعلية</label>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.ActualQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActualQuantity, "", new { @class = "text-danger" })
            </div>


            <label class="col-sm-2 col-form-label">
                رقم التعميد
            </label>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.AssignmentNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssignmentNo, "", new { @class = "text-danger" })
            </div>


            <label class="col-sm-2 col-form-label" id="">
                نوع السيارة/المعدة
            </label>
            <div class="col-sm-4" id="typee">
                @Html.DropDownList("MachineTypeId", null, "... أختر  ...", new { @id = "EQUType", @class = "ColorId form-control select2" })
                @*@Html.ValidationMessageFor(model => model.GasolineTypeId, "", new { @class = "text-danger" })*@
            </div>

            <label class="col-sm-2 col-form-label" id="">
                رقم السيارة /المعدة
            </label>
            <div class="col-sm-4" id="">
                @Html.DropDownList("CarId", null, "... أختر  ...", new { @id = "EquNo", @class = "ColorId form-control select2" })
                @*@Html.ValidationMessageFor(model => model.GasolineTypeId, "", new { @class = "text-danger" })*@
            </div>
            <label class="col-sm-2 col-form-label">قراءة العداد </label>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.CarKiloMeter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarKiloMeter, "", new { @class = "text-danger" })
            </div>

            <label class="col-sm-2 col-form-label">النوع</label>
            <div class="col-sm-4">
                <input type="text" id="CarType" class="form-control" readonly>
            </div>

            <label class="col-sm-2 col-form-label">السائق</label>
            <div class="col-sm-4">
                <input type="text" id="DriverID" class="form-control" readonly>
            </div>

          


            <div class="col-sm-4">
                @Html.EditorFor(model => model.DriverID, new { htmlAttributes = new { @class = "form-control", @Id = "DriverId", @hidden = "hidden" } })
                @Html.ValidationMessageFor(model => model.DriverID, "", new { @class = "text-danger" })
            </div>




        </div>

    </div>
}
@section ModelPopup{

}
@section JavaScriptSection{

    <script type="text/javascript" language="javascript">


        //$(document).ready(function () {
        //    $("#EquNo").change(function () {
        //    /*    $("#DaysCount").val("")*/

        //        $.get("/CarDelivery/GetLastTRX", { ID: $("#EquNo").val() }, function (data) {

        //            $.each(data, function (index, row) {

        //                $("#DrivId").val(row.DriverID)
        //            });
        //        });
        //    });
        //});


        $(document).ready(function () {
            $("#EquNo").change(function () {
                //$("#Mobile").val("");
                //$("#DriverID").val("")
                $.get("/StationsTrxOut/GetDriversInfo", { ID: $("#EquNo").val() }, function (data) {

                    $.each(data, function (index, row) {

                        $("#DriverID").val(row.DriverName);
                        $("#DriverId").val(row.Id);


                    });
                });
            });
        });

        $("input").keyup(function () {
            $("#change").val(1);
        })
        $("#back").click(function () {
            //alert($("#change").val());
            if ($("#change").val() == 1) {

                window.onbeforeunload = function () {
                    var Ans = confirm("لقد تم تغيير البيانات هل تريد الحفظ");
                    if (Ans == true) {
                        return true;
                        toastr.warning('هذه السيارة مسلمة لموظف ');
                    }

                    else
                        return false;
                };
            }


        });

        $(document).ready(function () {
            $("#change").val(0);
        })
    </script>
    <script>
        $(document).ready(function () {
            $("#StationId").change(function () {
                $.get("/StationsTrxOut/GetStationType", { ID: $("#StationId").val() }, function (data) {

                    if (data == true) {
                        $("#type").show();
                        $("#typee").show();
                        $("#FuelType").val("بنزين");

                    }
                    else {
                        $("#type").hide();
                        $("#typee").hide();
                        $("#FuelType").val("وقود");
                    }
                });
            })
        });


        $(document).ready(function () {
            $("#StationId").change(function () {
                $.get("/StationsTrxOut/GetStationInfo", { ID: $("#StationId").val() }, function (data) {

                    $.each(data, function (index, row) {

                        $("#Balance").val(row.TankCapacity);
                        $("#MinLimit").val(row.MinCapacity);
                        $("#MaxLimit").val(row.MaxCapacity);
                    });
                });
            });





            $("#EQUType").change(function () {
                $.get("/StationsTrxOut/GetCars", { ID: $("#EQUType").val() }, function (data) {
                    $("#EquNo").empty();
                    $("#EquNo").prop("disabled", false);
                    $("#EquNo").append("<option>اختار </option>")
                    $.each(data, function (index, row) {

                        $("#EquNo").append("<option value='" + row.Id + "'>" + row.PanelNo + "</option>")
                    });
                });
            });

            $("#EquNo").change(function () {
                $.get("/StationsTrxOut/GetCarType", { ID: $("#EquNo").val(), Type: $("#EQUType").val() }, function (data) {

                    $.each(data, function (index, row) {

                        $("#CarType").val(row.CarTypeId);

                    });
                });
            });

        });

        if ($("#AssignmentDatee").val() == 1) {
            var date = new Date();

            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();

            if (month < 10) month = "0" + month;
            if (day < 10) day = "0" + day;

            var today = year + "-" + month + "-" + day;
            $("#AssignmentDate").attr("value", today);
        }

        else {
            var date = new Date($("#AssignmentDatee").val());

            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();

            if (month < 10) month = "0" + month;
            if (day < 10) day = "0" + day;

            var today = year + "-" + month + "-" + day;
            $("#AssignmentDate").attr("value", today);
        }







        if ($("#InvoiceDatee").val() == 1) {
            var date = new Date();

            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();

            if (month < 10) month = "0" + month;
            if (day < 10) day = "0" + day;

            var today = year + "-" + month + "-" + day;
            $("#InvoiceDate").attr("value", today);
        }

        else {
            var date = new Date($("#InvoiceDatee").val());

            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();

            if (month < 10) month = "0" + month;
            if (day < 10) day = "0" + day;

            var today = year + "-" + month + "-" + day;
            $("#InvoiceDate").attr("value", today);
        }







        if ($("#Datee").val() == 1) {
            var date = new Date();

            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();

            if (month < 10) month = "0" + month;
            if (day < 10) day = "0" + day;

            var today = year + "-" + month + "-" + day;
            $("#Date").attr("value", today);
        }

        else {
            var date = new Date($("#Datee").val());

            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();

            if (month < 10) month = "0" + month;
            if (day < 10) day = "0" + day;

            var today = year + "-" + month + "-" + day;
            $("#Date").attr("value", today);
        }


        $(document).ready(function () {
            $("#type").hide();
            $("#typee").hide();
            //$("#StationId").prop("disabled", true);
            $("#FuelType").prop("disabled", true);
            //    $("#EquNo").prop("disabled", true);
        })


        $(document).ready(function () {
            $("#Staions").change(function () {
                $.get("/StationsTrxOut/GetStations", { ID: $("#Staions").val() }, function (data) {
                    //$("#StationId").prop("disabled", false);
                    $("#StationId").empty();
                    $("#StationId").append("<option> اختر المحطة </option>")
                    $.each(data, function (index, row) {

                        $("#StationId").append("<option value='" + row.Id + "'>" + row.StationName + "</option>")
                    });
                });
            })
        });




    </script>

    @*CheckCarHasCarDriver*@

    <script>
        $("#Save").change(function () {
            //$("#ReceiptDate").val("");

               GetReceiptDate();
            });

        function GetReceiptDate() {
            $.ajax({
                url: '@Url.Action("GetReceiptDate", "CarDelivery")',
                method: "Get",
                //contentType: "application/json;charset=utf-8",
                dataType: "Html",
                data: {
                Id: $("#CarId").val(),
                },
                success: function (result) {

                    if (result != 1) {
                        $("#ReceiptDateHidden").val(result);
                        var g = $("#ReceiptDateHidden").val();


                        var date = new Date(g);

                        var day = date.getDate();
                        var month = date.getMonth() + 1;
                        var year = date.getFullYear();

                        if (month < 10) month = "0" + month;
                        if (day < 10) day = "0" + day;

                        var today = year + "-" + month + "-" + day;
                        $("#ReceiptDate").attr("value", today);
                    }
                    else if (result == 1) {
                        $("#ReceiptDate").attr("value", "");

                    }
                },
                error: function (errormessage) {
                alert(errormessage.responseText);
                }
             })

            }


    </script>
}