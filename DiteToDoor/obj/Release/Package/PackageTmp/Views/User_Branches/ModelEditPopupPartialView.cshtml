@using DataMapping.Entites
@model DataMapping.Entites.Users_Branches
 @{ 
     ApplicationDbContext db = new ApplicationDbContext();


     var UserId = db.User.SingleOrDefault(a => a.Id == Model.UsersId);
     
     var BranchesID = db.Branches.SingleOrDefault(a => a.Id == Model.BranchId);


     SelectList UsersId = new SelectList(db.User.ToList(), "Id", "EngDescription", UserId.Id);
     SelectList BranchId = new SelectList(db.Branches.Where(a => a.IsDeleted == false).ToList(), "Id", "BranchesName", BranchesID.Id);

 }
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">@DataMapping.Resources.Resource.Edit</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", @id = "ModalForm" }))

            {
                @Html.HiddenFor(x => x.Id)
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group col-md-12">
                            <label>@DataMapping.Resources.Resource.UserName</label>
                            @Html.DropDownList("UsersId", UsersId, "اختر اسم المستخدم", new { @id = "UsersId", @class = "select2 form-control" })
                        </div>
                        </div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            <label>@DataMapping.Resources.Resource.BranchId</label>
                            @Html.DropDownList("BranchId", BranchId, "اختر الفرع", new { @id = "BranchId", @class = "select2 form-control" })

                        </div>
                        <div class="form-group col-md-4">
                            <br />
                            <label>افتراضية</label>
                            @Html.CheckBox("IsDefault", htmlAttributes: new { @class = "pull-right mycheckbox" })
                            @Html.ValidationMessageFor(model => model.IsDefault, "", new { @class = "text-danger" })
                        </div>
                    </div>
                        </div>
                       

                 
                    
                
                <div class="bg-whitesmoke br">
                    <div class="row">
                        <div class="col-6 text-right">
                            <button type="button" class="btn btn-success" onclick="Edit()">@DataMapping.Resources.Resource.save</button>
                        </div>
                        <div class="col-6 text-left">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">@DataMapping.Resources.Resource.Close</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script type="text/javascript">

    function Edit() {
        var UserId = document.getElementById("UsersId").value;
        var BrancheId = document.getElementById("BranchId").value;
        var Isvalid = true;
        if (UserId == "" || UserId == null || UserId == 0 && BrancheId == 0 || BrancheId == "" || BrancheId == null) {
            Isvalid = false;
          
            toastr.warning('ادخل البيانات')
        }
        else {
            $.ajax({

                type: "POST",
                url: '/User_Branches/AddOrEdit',     //your action
                data: $('#ModalForm').serialize(),   //your form name.it takes all the values of model
                dataType: 'json',
                success: function (result) {
                    
                    $('#exampleModalCenter').modal('hide');
                    loadData();
                //    location.reload();
                },

                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('oops, something bad happened')
                }

            });
        }
    }
  
   
   
</script>


